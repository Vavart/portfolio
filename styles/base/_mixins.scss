// Responsive

$breakpoints-width: (
    xsmall: 576px,
    small: 900px,
    medium: 1200px,
    large: 1680px,
    xlarge: 1920px,
);

@mixin media-xsmall {
    @media (max-width: map-get($breakpoints-width, xsmall)) {
        @content;
    }
}

@mixin media-small {
    @media (max-width: map-get($breakpoints-width, small)) {
        @content;
    }
}

@mixin media-medium {
    @media (max-width: map-get($breakpoints-width, medium)) {
        @content;
    }
}

@mixin media-large {
    @media (max-width: map-get($breakpoints-width, large)) {
        @content;
    }
}

@mixin media-xlarge {
    @media (max-width: map-get($breakpoints-width, xlarge)) {
        @content;
    }
}

// Titles (default = h1)

@mixin title($type : "default", $after : false, $color: "default") {
    font-family: $font-family-title-h1;
    font-size: $font-size-800;
    color: $color-palette-primary-400;
    letter-spacing: 2px;
    line-height: 1.1;
    span { position: relative;}

    @if $after {
        span::after {
            content: "";
            display: block;
            position: absolute;
            bottom: 15px;
            right: 0;
            z-index:-1;
            width: $space-700;
            height: $space-200;
            background: $color-palette-tertiary-400;
        }
    }
    
    @if $type == "h2" {
        font-family: $font-family-title-h2;
        font-size: $font-size-700;

        @if $after {
            span::after {
                bottom: 8px;
                width: $space-500;
                height: $space-100;
            }
        }
    }
    
    @else if $type == "h3" {
        font-family: $font-family-title-h3;
        font-size: $font-size-300;

        @if $after {
            span::after {
                bottom: 5px;
                width: $space-500;
                height: $space-50;
            }
        }
    }

    @if $color == "light" {
        color: $color-palette-white;
    }
}

// Text (default = p)

@mixin text($type : "default", $size: "default", $color : "default") {
    font-family: $font-family-text;
    font-size: $font-size-200;
    color: $color-palette-primary-400;
    line-height: 1.5;
    letter-spacing: $space-50 * 0.1;

    @if $type == "bold" {
        font-family: $font-family-text-bold;
    }

    @else if $type == "italic" {
        font-family: $font-family-text-italic;
    }

    @if $size == "small" {
        font-size: $font-size-100;
    }

    @if $color == "light" {
        color: $color-palette-white;
    }
}

// Inline flex center with $gap

@mixin inline-flex-center($gap : 0px) {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    gap: $gap;
}

// Flex center with $gap and $col

@mixin flex($justify: "center", $align : "center", $gap : 0px, $col : false) {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: $gap;
    
    @if $col {
        flex-direction: column;
    }
    
    @if $justify == "between" {
        justify-content: space-between;
    }
    
    @else if $justify == "around" {
        justify-content: space-around;
    }

    @else if $justify == "start" {
        justify-content: flex-start;
    }

    @else if $justify == "end" {
        justify-content: flex-end;
    }

    @if $align == "start" {
        align-items: flex-start;
    }

    @else if $align == "end" {
        align-items: flex-end;
    }
        
}

// CTAs

@mixin button($type : "default", $icon : false) {
    border: none;
    outline: none;
    @include text($type : "bold");
    padding: $space-100 $space-200;
    border-radius: $space-50;
    background-color: $color-palette-tertiary-400;
    cursor: pointer;

    @if $type == "ghost" {
        border : 2px solid $color-palette-tertiary-400;
        background: transparent;

        // Override color from the text mixin
        color: $color-palette-tertiary-400;
    }

    @else {
        &:hover {background-color: $color-palette-tertiary-200;}
        transition: background-color 0.2s ease-in-out;
    }

    @if $icon {
        @include inline-flex-center($gap: 10px);
        img {
            width: 30px;
            height: 30px;
        }
    }
}

// Tags

@mixin tag() {
    display: inline-block;
    background: $color-palette-primary-300;
    padding: $space-50 $space-200;
    border-radius: $button-pill-radius;
    box-shadow: $box-shadow-primary;
    
    span {
        @include text($color: "light");
    }
}

.tag {
    @include tag();
}